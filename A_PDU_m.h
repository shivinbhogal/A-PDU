//
// Generated file, do not edit! Created by nedtool 4.6 from A_PDU.msg.
//

#ifndef _A_PDU_M_H_
#define _A_PDU_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>A_PDU.msg:20</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * enum t
 * {
 * 
 *     DATA = 1;
 *     ACK = 0;
 * }
 * </pre>
 */
enum t {
    DATA = 1,
    ACK = 0
};

/**
 * Class generated from <tt>A_PDU.msg:25</tt> by nedtool.
 * <pre>
 * packet A_PDU
 * {
 *     int src;
 *     int dest;
 *     int id;
 *     bool type @enum(t);
 * }
 * </pre>
 */
class A_PDU : public ::cPacket
{
  protected:
    int src_var;
    int dest_var;
    int id_var;
    bool type_var;

  private:
    void copy(const A_PDU& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const A_PDU&);

  public:
    A_PDU(const char *name=NULL, int kind=0);
    A_PDU(const A_PDU& other);
    virtual ~A_PDU();
    A_PDU& operator=(const A_PDU& other);
    virtual A_PDU *dup() const {return new A_PDU(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getSrc() const;
    virtual void setSrc(int src);
    virtual int getDest() const;
    virtual void setDest(int dest);
    virtual int getId() const;
    virtual void setId(int id);
    virtual bool getType() const;
    virtual void setType(bool type);
};

inline void doPacking(cCommBuffer *b, A_PDU& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, A_PDU& obj) {obj.parsimUnpack(b);}


#endif // ifndef _A_PDU_M_H_

